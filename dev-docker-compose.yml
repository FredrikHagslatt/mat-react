version: "3.7"
services:
  frontend:
    build:
      context: "${FE_DIR}"
      dockerfile: Dockerfile.dev
    image: "${FE_IMAGE}"
    restart: unless-stopped
    container_name: "${FE_CONTAINER}"
    ports:
      - "3000:3000"
    networks:
      - frontnet
    environment:
      - REACT_APP_API_URL=${API_CONTAINER}:3001
    env_file:
      - .env
    volumes:
      - "./frontend/src/:/app/src"
      - "./frontend/public/:/app/public"

  api:
    build:
      context: "${API_DIR}"
      dockerfile: Dockerfile.dev
    image: "${API_IMAGE}"
    restart: unless-stopped
    container_name: "${API_CONTAINER}"
    networks:
      - frontnet
      - backnet
    env_file:
      - .env
    volumes:
      - ./api/src:/app/src
      - ./api/assets:/app/assets
      - "${DEV_LOG_DIR}/api:/app/logs"

  database:
    build:
      context: "${POSTGRES_DIR}"
      dockerfile: Dockerfile.dev
    image: "${POSTGRES_IMAGE}"
    restart: unless-stopped
    container_name: "${POSTGRES_CONTAINER}"
    networks:
      - backnet
    env_file:
      - .env
    volumes:
      - "./database/dev-dbfiles:/var/lib/postgresql/data"
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.rotate-dishes.schedule: "0 0 0 * * *" # Run every midnight
      ofelia.job-exec.rotate-dishes.command: "./scripts/rotate_dishes.sh"

  scheduler:
    image: mcuadros/ofelia:latest
    restart: unless-stopped
    depends_on:
      - database
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  frontnet:
    driver: bridge
    name: "${FRONT_NET}"
  backnet:
    driver: bridge
    name: "${BACK_NET}"
